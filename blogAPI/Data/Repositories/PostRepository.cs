using Data.Interfaces;
using Data.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Data.Repositories
{
    public class PostRepository : IPostRepository
    {


        List<Post> posts = new List<Post>
        {
            new Post
            {
                Id = 1,
                Title = "Example post",
                Summary = "This is an example post",
                Body = "This is just some post. This part should contain all the markup generated by the WYSIWIG editor.",
                Tags = {
                    new Tag {TagId = 1, TagName = "Programming"},
                    new Tag {TagId = 2, TagName = "C#"},
                    new Tag {TagId = 3, TagName = "JS"},
                    new Tag {TagId = 4, TagName = "Abstract"}
                },
                Date = DateTime.Now,
                UrlSlug = "example-post"
            }
        };
        private readonly DataContext _db;

        public PostRepository(DataContext db)
        {
            this._db = db;

        }

        public bool AddNewPost(Post post)
        {
            _db.Posts.Add(post);
            _db.SaveChanges();
            return true;
        }

        public List<Post> EditPost(int id, Post post)
        {
            throw new NotImplementedException();
        }

        public List<Post> GetAllPosts()
        {
            return posts;
        }
        public Post GetPostById(int id)
        {
            return posts.FirstOrDefault(x => x.Id == id);
        }

        public List<Post> GetPostsByAuthor(string Author)
        {
            throw new NotImplementedException();
        }

        public bool Remove(int id)
        {
            throw new NotImplementedException();
        }

        Post IPostRepository.EditPost(int id, Post post)
        {
            throw new NotImplementedException();
        }
    }
}
